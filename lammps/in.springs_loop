# LAMMPS input script for a 2D spring network (using atom types for groups)

# 1. Initialization
# --------------------
units           lj
dimension       2
boundary        p f p
atom_style      bond

# 2. System Definition
# --------------------
# This data file MUST have 3 atom types: 1=mobile, 2=bottom, 3=top
read_data       data.springs

# 3. Settings
# --------------------
# -- Interactions
bond_style      harmonic
bond_coeff      1 100.0 1.0

# -- Add random displacement to initial grid positions to break symmetry
displace_atoms  all random 0.01 0.01 0.0 8675309

# -- Define Groups based on Atom Type (MUCH SIMPLER AND MORE ROBUST)
group           bottom       type 2
group           top          type 3
group           mobile       type 1

# -- Fix the bars in place by zeroing out their forces.
fix             1 bottom setforce 0.0 0.0 0.0
fix             2 top setforce 0.0 0.0 0.0

# -- Initial Energy Minimization
echo            both
print           "Performing initial energy minimization..."
min_style       cg
minimize        1.0e-4 1.0e-6 1000 10000
print           "Initial minimization complete."

# 4. Quasi-static Pulling Loop
# --------------------
print           "Starting quasi-static pulling simulation..."
print           "Step,TotalEnergy" # CSV header

# -- Loop and displacement variables
# We need the initial distance D. We can compute it from the group bounds once.
variable y_max_top equal bound(top,ymax)
variable y_min_bot equal bound(bottom,ymin)
variable D_initial equal $(v_y_max_top - v_y_min_bot)
variable pull_dist equal 0.1*${D_initial}
variable n_steps equal 10

variable E equal etotal

# -- Main loop
variable i loop ${n_steps}
label           pull_loop

    displace_atoms  top move 0 ${pull_dist} 0 units box

    minimize        1.0e-4 1.0e-6 1000 10000

    print           "$(v_i),${E}"

    dump            1 all custom 1 dump.springs_loop.$(v_i).lammpstrj id type x y z
    run             0
    undump          1

    jump SELF pull_loop

print           "Simulation loop finished."